import logging
import asyncio
import random

import config
import keyboard_casino
from aiogram import Bot, Dispatcher, types, executor
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.utils import executor
from asyncio import sleep
from slots import get_result_text

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
bot = Bot(token=config.API_TOKEN)


class GameStates(StatesGroup):
    waiting_for_bet_1 = State()
    waiting_for_roll = State()
    waiting_for_bet_2 = State()
    waiting_for_twist = State()
    waiting_for_bet_3 = State()
    waiting_for_rps = State()


# –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∏—Ö –±–∞–ª–∞–Ω—Å–æ–≤ –≤–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤–æ–π –≤–∞–ª—é—Ç—ã (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö)
users = {}
# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
dp = Dispatcher(bot, storage=MemoryStorage())


# –°–æ–∑–¥–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∏–≥—Ä—ã
class GameStates(StatesGroup):
    waiting_for_bet_1 = State()
    waiting_for_roll = State()
    waiting_for_bet_2 = State()
    waiting_for_twist = State()
    waiting_for_bet_3 = State()
    waiting_for_rps = State()


# –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∏—Ö –±–∞–ª–∞–Ω—Å–æ–≤ –≤–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤–æ–π –≤–∞–ª—é—Ç—ã (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö)
users = {}


# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
@dp.message_handler(commands=['start'])
async def start_bot(message: types.Message):
    user_id = message.from_user.id
    if user_id not in users:
        users[user_id] = 5000
    await bot.send_message(chat_id=message.from_user.id,
                           text=f"""\
    <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –∫–∞–∑–∏–Ω–æ!</b>
    –£ –≤–∞—Å {users[user_id]} –æ—á–∫–æ–≤ üíµ. –í—ã –º–æ–∂–µ—Ç–µ —Å—Ç–∞–≤–∏—Ç—å —Å—Ç–∞–≤–∫–∏ –∏ –∏–≥—Ä–∞—Ç—å –≤ –∏–≥—Ä—ãüéÆ.
    <b>–í–Ω–∏–º–∞–Ω–∏–µ</b>: –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏, –∏ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å —Å–±—Ä–æ—à–µ–Ω—ã –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç! 
    –ü–æ–º–Ω–∏—Ç–µ: –ª—É–¥–æ–º–∞–Ω–∏—è ‚Äî —ç—Ç–æ –±–æ–ª–µ–∑–Ω—å, –∏ –Ω–∏–∫–∞–∫–∏—Ö –ø–ª–∞—Ç–Ω—ã—Ö –æ–ø—Ü–∏–π –≤ –±–æ—Ç–µ –Ω–µ—Ç.
    –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É: –ü–æ–º–æ—â—å üîç
    """,
                           parse_mode="HTML",
                           reply_markup=keyboard_casino.mainMenu)


# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –±–∞–ª–∞–Ω—Å–∞
@dp.message_handler(text=[config.BALANCE])
async def cmd_balance(message: types.Message):
    await bot.send_message(chat_id=message.from_user.id,
                           text='–ú–µ–Ω—é –±–∞–ª–∞–Ω—Å–∞üíµ',
                           parse_mode="HTML",
                           reply_markup=keyboard_casino.balanceMenu)
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–ª–æ–≤–∞—Ä–µ
    user_id = message.from_user.id
    if user_id not in users:
        users[user_id] = 10000
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –±–∞–ª–∞–Ω—Å–µ –≤–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤–æ–π –≤–∞–ª—é—Ç—ã
    await message.answer(f'–í–∞—à –±–∞–ª–∞–Ω—Å: {users[user_id]}\n'
                         f'–ï—Å–ª–∏ —É –≤–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –¥–µ–Ω—å–≥–∏ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –Ω–∞ 100 üí∏')

@dp.message_handler(text=[config.BALANCE_PAY])
async def cmd_balance(message: types.Message):
    user_id = message.from_user.id
    pay_balance = message.text
    if user_id not in users:
        users[user_id] = 10000
    if pay_balance == config.BALANCE_PAY:
        if users[user_id] <= 0:
            users[user_id] = 100
            await message.answer(f'–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–∏–ª–∏ –±–∞–ª–∞–Ω—Å, –≤–∞—à –±–∞–ª–∞–Ω—Å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 100üí∏')
        else:
            await message.answer(f'–í–∞—à –±–∞–ª–∞–Ω—Å: {users[user_id]} üí∏, –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å.')


# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
@dp.message_handler(text=[config.MAIN_MENU])
async def main_menu_command(message: types.Message):
    await bot.send_message(chat_id=message.from_user.id,
                           text='–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüïπ',
                           parse_mode="HTML",
                           reply_markup=keyboard_casino.mainMenu)

# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –º–µ–Ω—é –∏–≥—Ä
@dp.message_handler(text=[config.GAMES])
async def game_list_command(message: types.Message):
    await bot.send_message(chat_id=message.from_user.id,
                           text="–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –º–µ–Ω—é –∏–≥—Ä—ã, –≥–¥–µ –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –≥—Ä—É –≤ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø–æ–∏–≥—Ä–∞—Ç—å üéÆ",
                           parse_mode="HTML",
                           reply_markup=keyboard_casino.gamesMenu)


@dp.message_handler(text=[config.DISCR])
async def discr_command(message: types.Message):
    await bot.send_message(chat_id=message.from_user.id,
                           text="–ü—Ä–æ—Å—Ç–æ–π —Å–∏–º—É–ª—è—Ç–æ—Ä –∫–∞–∑–∏–Ω–æ üé∞. –°–æ–∑–¥–∞–Ω –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –≤ –Ω–∞—É—á–Ω—ã—Ö –∏ —Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã—Ö —Ü–µ–ª—è—Ö.",
                           parse_mode="HTML")


@dp.message_handler(text=[config.HELP])
async def help_command(message: types.Message):
    await bot.send_message(chat_id=message.from_user.id,
                           text=config.HELP_COMMAND,
                           parse_mode="HTML")


# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏–≥—Ä—ã
@dp.message_handler(text=[config.STOP_GAME], state='*')
async def stop_game_handler(message: types.Message, state: FSMContext):
    # –°—Ç–∏—Ä–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–∞ –Ω–∞—á–∞–ª—å–Ω—ã–π —ç—Ç–∞–ø
    await state.finish()
    await message.answer('–ò–≥—Ä–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ ‚ùå')
    await bot.send_message(chat_id=message.from_user.id,
                           text="–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –º–µ–Ω—é –∏–≥—Ä üéÆ",
                           parse_mode="HTML",
                           reply_markup=keyboard_casino.gamesMenu)




@dp.message_handler(text=[config.DICE_GAME])
async def main_menu_command(message: types.Message):
    await bot.send_message(chat_id=message.from_user.id,
                           text='–ò–≥—Ä–∞ –≤ –∫–æ—Å—Ç–∏ üé≤',
                           parse_mode="HTML",
                           reply_markup=keyboard_casino.menuDice)
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∏–≥—Ä—ã
    await message.answer(
        '–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã:\n1. –°–¥–µ–ª–∞–π—Ç–µ —Å—Ç–∞–≤–∫—É\n2. –ö–∏–Ω—å—Ç–µ –∫—É–±–∏–∫\n3. –ï—Å–ª–∏ —É –≤–∞—Å –±–æ–ª—å—à–µ –æ—á–∫–æ–≤ –Ω–∞ –∫—É–±–∏–∫–µ - –ø–æ–ª—É—á–∏—Ç–µ —É–¥–≤–æ–µ–Ω–Ω—É—é —Å—Ç–∞–≤–∫—É, –∏–Ω–∞—á–µ - –ø—Ä–æ–∏–≥—Ä–∞–µ—Ç–µ —Å—Ç–∞–≤–∫—É')
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤—ã–π —à–∞–≥ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ –æ–∂–∏–¥–∞–Ω–∏–∏ —Å—Ç–∞–≤–∫–∏
    await GameStates.waiting_for_bet_1.set()


@dp.message_handler(state=GameStates.waiting_for_bet_1)
async def get_user_bet(message: types.Message, state: FSMContext):
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞–≤–∫—É –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    bet = message.text
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç–∞–≤–∫–∞ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º
    if not bet.isdigit():
        await message.answer('–°—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
        return
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è —Å—Ç–∞–≤–∫–∏
    user_id = message.from_user.id
    if int(bet) > users[user_id]:
        await message.answer('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–º–µ–Ω—å—à–∏—Ç—å —Å—Ç–∞–≤–∫—É –∏–ª–∏ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å.')
        return
    # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º —Å—Ç–∞–≤–∫—É –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É —Å–æ—Å—Ç–æ—è–Ω–∏—è
    async with state.proxy() as data:
        data['bet'] = int(bet)
    await message.answer(
        f'–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å—Ç–∞–≤–∫—É: {bet}\n–ö–∏–Ω—å—Ç–µ –∫—É–±–∏–∫ üé≤')
    await GameStates.waiting_for_roll.set()



@dp.message_handler(state=GameStates.waiting_for_roll)
async def get_user_bet(message: types.Message, state: FSMContext):
    # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    roll = message.text
    user_id = message.from_user.id
    if user_id not in users:
        users[user_id] = 10000
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—ã–±–æ—Ä —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º –æ—Ç 1 –¥–æ 4
    if roll != config.ROLL_THE_DICE:
        await message.answer('–ö–∏–Ω—å—Ç–µ –∫—É–±–∏–∫ üé≤')
        return
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞–≤–∫—É –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É —Å–æ—Å—Ç–æ—è–Ω–∏—è
    async with state.proxy() as data:
        bet = data['bet']
    bot_data = await bot.send_dice(message.from_user.id)
    bot_data = bot_data['dice']['value']
    await sleep(5)

    user_data = await bot.send_dice(message.from_user.id)
    user_data = user_data['dice']['value']
    await sleep(5)

    if bot_data > user_data:
        users[message.from_user.id] -= bet
        await bot.send_message(message.from_user.id, f"–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏! –í–∞—à –±–∞–ª–∞–Ω—Å: {users[user_id]}")
    elif bot_data < user_data:
        users[message.from_user.id] += bet
        await bot.send_message(message.from_user.id, f"–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏! –í–∞—à –±–∞–ª–∞–Ω—Å: {users[user_id]}")
    else:
        await bot.send_message(message.from_user.id, f"–ù–∏—á—å—è! –í–∞—à –±–∞–ª–∞–Ω—Å: {users[user_id]}")
    # –ó–∞–≤–µ—Ä—à–∞–µ–º –∏–≥—Ä—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –Ω–∞—á–∞–ª—å–Ω—ã–π —ç—Ç–∞–ø —Å–æ—Å—Ç–æ—è–Ω–∏—è
    await GameStates.waiting_for_bet_1.set()


@dp.message_handler(text=[config.GAMES_SLOTS])
async def main_menu_command(message: types.Message):
    await bot.send_message(chat_id=message.from_user.id,
                           text='–ò–≥—Ä–∞ –≤ —Å–ª–æ—Ç—ã üé∞',
                           parse_mode="HTML",
                           reply_markup=keyboard_casino.menuSlots)
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∏–≥—Ä—ã
    await message.answer(
        '–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã:\n1. –°–¥–µ–ª–∞–π—Ç–µ —Å—Ç–∞–≤–∫—É\n2. –ö—Ä—É—Ç–∏—Ç–µ —Å–ª–æ—Ç\n'
        '3. –ï—Å–ª–∏ —É –≤–∞—Å –≤—Å–µ 3 –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —Å–∏–º–≤–æ–ª–∞, –∫—Ä–æ–º–µ 3 —Å–µ–º—ë—Ä–æ–∫ - –ø–æ–ª—É—á–∏—Ç–µ —É—Ç—Ä–æ–µ–Ω–Ω—É—é —Å—Ç–∞–≤–∫—É'
        ', –µ—Å–ª–∏ —É –≤–∞—Å —Å —Å–∞–º–æ–≥–æ –Ω–∞—á–∞–ª–∞ —Ç–æ–ª—å–∫–æ –¥–≤–∞ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —Å–∏–º–≤–æ–ª–∞ - –ø–æ–ª—É—á–∏—Ç–µ —É–¥–≤–æ–µ–Ω–Ω—É—é —Å—Ç–∞–≤–∫—É,'
        ' –µ—Å–ª–∏ —É –≤–∞—Å 3 —Å–µ–º—ë—Ä–∫–∏ - –ø–æ–ª—É—á–∞–µ—Ç–µ –≤ –ø—è—Ç—å —Ä–∞–∑ –±–æ–ª—å—à–µ, —á–µ–º —Å—Ç–∞–≤–∏–ª–∏, –∏–Ω–∞—á–µ - –ø—Ä–æ–∏–≥—Ä–∞–µ—Ç–µ —Å—Ç–∞–≤–∫—É')
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤—ã–π —à–∞–≥ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ –æ–∂–∏–¥–∞–Ω–∏–∏ —Å—Ç–∞–≤–∫–∏
    await GameStates.waiting_for_bet_2.set()


@dp.message_handler(state=GameStates.waiting_for_bet_2)
async def get_user_bet(message: types.Message, state: FSMContext):
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞–≤–∫—É –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    bet = message.text
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç–∞–≤–∫–∞ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º
    if not bet.isdigit():
        await message.answer('–°—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
        return
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è —Å—Ç–∞–≤–∫–∏
    user_id = message.from_user.id
    if int(bet) > users[user_id]:
        await message.answer('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–º–µ–Ω—å—à–∏—Ç—å —Å—Ç–∞–≤–∫—É –∏–ª–∏ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å.')
        return
    # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º —Å—Ç–∞–≤–∫—É –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É —Å–æ—Å—Ç–æ—è–Ω–∏—è
    async with state.proxy() as data:
        data['bet'] = int(bet)
    await message.answer(
        f'–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å—Ç–∞–≤–∫—É: {bet}\n–ö—Ä—É—Ç–∏—Ç–µ —Å–ª–æ—Ç üé∞')
    await GameStates.waiting_for_twist.set()


@dp.message_handler(state=GameStates.waiting_for_twist)
async def get_user_bet(message: types.Message, state: FSMContext):
    # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_id = message.from_user.id
    if user_id not in users:
        users[user_id] = 10000
    twist = message.text
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—ã–±–æ—Ä —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º –æ—Ç 1 –¥–æ 4
    if twist != config.TWIST:
        await message.answer('–ö—Ä—É—Ç–∏—Ç–µ —Å–ª–æ—Ç üé∞')
        return
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞–≤–∫—É –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É —Å–æ—Å—Ç–æ—è–Ω–∏—è
    async with state.proxy() as data:
        bet = data['bet']
    result_dice = await message.answer_dice(emoji='üé∞')
    await asyncio.sleep(3)
    text = get_result_text(result_dice=result_dice.dice.value, bid=bet)
    point = text[-1]
    users[message.from_user.id] += point
    await message.answer(text=text[0])
    await GameStates.waiting_for_bet_2.set()


@dp.message_handler(text=[config.RPS_GAME])
async def main_menu_command(message: types.Message):
    await bot.send_message(chat_id=message.from_user.id,
                           text='–ò–≥—Ä–∞ –≤ –∫–∞–º–µ–Ω—å-–Ω–æ–∂–Ω–∏—Ü—ã-–±—É–º–∞–≥–∞ ‚úÇ',
                           parse_mode="HTML",
                           reply_markup=keyboard_casino.menuRPS)
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∏–≥—Ä—ã
    await message.answer(
        '–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã:\n1. –°–¥–µ–ª–∞–π—Ç–µ —Å—Ç–∞–≤–∫—É\n2. –í—ã–±–µ—Ä–µ—Ç–µ –∫–∞–º–µ–Ω—å –∏–ª–∏ –±—É–º–∞–≥—É –∏–ª–∏ –Ω–æ–∂–Ω–∏—Ü—ã\n3. –ï—Å–ª–∏ —É –≤–∞—Å –∫–∞–º–µ–Ω—å,'
        ' –∞ —É –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ –Ω–æ–∂–Ω–∏—Ü—ã - –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏,'
        ' –µ—Å–ª–∏ —É –≤–∞—Å –±—É–º–∞–≥–∞, –∞ —É –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ –∫–∞–º–µ–Ω—å - –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏,'
        ' –µ—Å–ª–∏ —É –≤–∞—Å –Ω–æ–∂–Ω–∏—Ü—ã, –∞ —É –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ –±—É–º–∞–≥–∞ - –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏,'
        ' –µ—Å–ª–∏ –Ω–∞–æ–±–æ—Ä–æ—Ç - –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏, –ø—Ä–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –∫–æ–º–±–∏–Ω–∞—Ü–∏—è - –Ω–∏—á—å—è, –ø—Ä–∏ –≤—ã–∏–≥—Ä—ã—à–µ –±–∞–ª–∞–Ω—Å —É–¥–≤–∞–∏–≤–∞–µ—Ç—Å—è.')
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤—ã–π —à–∞–≥ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ –æ–∂–∏–¥–∞–Ω–∏–∏ —Å—Ç–∞–≤–∫–∏
    await GameStates.waiting_for_bet_3.set()

@dp.message_handler(state=GameStates.waiting_for_bet_3)
async def get_user_bet(message: types.Message, state: FSMContext):
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞–≤–∫—É –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    bet = message.text
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç–∞–≤–∫–∞ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º
    if not bet.isdigit():
        await message.answer('–°—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
        return
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è —Å—Ç–∞–≤–∫–∏
    user_id = message.from_user.id
    if int(bet) > users[user_id]:
        await message.answer('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–º–µ–Ω—å—à–∏—Ç—å —Å—Ç–∞–≤–∫—É –∏–ª–∏ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å.')
        return
    # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º —Å—Ç–∞–≤–∫—É –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É —Å–æ—Å—Ç–æ—è–Ω–∏—è
    async with state.proxy() as data:
        data['bet'] = int(bet)
    await message.answer(
        f'–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å—Ç–∞–≤–∫—É: {bet}\n–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç!')
    await GameStates.waiting_for_rps.set()


@dp.message_handler(state=GameStates.waiting_for_rps)
async def get_user_bet(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    if user_id not in users:
        users[user_id] = 10000
    # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    choice_rps = message.text
    q = random.choice(['–ö–∞–º–µ–Ω—å‚úä', '–ù–æ–∂–Ω–∏—Ü—ã‚úå', '–ë—É–º–∞–≥–∞üñê'])
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞–≤–∫—É –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É —Å–æ—Å—Ç–æ—è–Ω–∏—è
    async with state.proxy() as data:
        bet = data['bet']
    await bot.send_message(message.from_user.id, f"–í—ã –≤—ã–±—Ä–∞–ª–∏ {choice_rps}, –∞ —è –≤—ã–±—Ä–∞–ª {q}")
    if choice_rps == q:
        await bot.send_message(message.from_user.id, f"–ù–∏—á—å—è! –í–∞—à –±–∞–ª–∞–Ω—Å: {users[user_id]}")
    elif choice_rps == "–ö–∞–º–µ–Ω—å‚úä" and q == "–ù–æ–∂–Ω–∏—Ü—ã‚úå":
        users[message.from_user.id] += bet
        await bot.send_message(message.from_user.id, f"–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏! –í–∞—à –±–∞–ª–∞–Ω—Å: {users[user_id]}")
    elif choice_rps == "–ù–æ–∂–Ω–∏—Ü—ã‚úå" and q == "–ë—É–º–∞–≥–∞üñê":
        users[message.from_user.id] += bet
        await bot.send_message(message.from_user.id, f"–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏! –í–∞—à –±–∞–ª–∞–Ω—Å: {users[user_id]}")
    elif choice_rps == "–ë—É–º–∞–≥–∞üñê" and q == "–ö–∞–º–µ–Ω—å‚úä":
        users[message.from_user.id] += bet
        await bot.send_message(message.from_user.id, f"–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏! –í–∞—à –±–∞–ª–∞–Ω—Å: {users[user_id]}")
    elif choice_rps == "" and q == "–ö–∞–º–µ–Ω—å‚úä":
        users[message.from_user.id] += bet
        await bot.send_message(message.from_user.id, f"–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏! –í–∞—à –±–∞–ª–∞–Ω—Å: {users[user_id]}")

    else:
        users[message.from_user.id] -= bet
        await bot.send_message(message.from_user.id, f"–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏! –í–∞—à –±–∞–ª–∞–Ω—Å: {users[user_id]}")
    # –ó–∞–≤–µ—Ä—à–∞–µ–º –∏–≥—Ä—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –Ω–∞—á–∞–ª—å–Ω—ã–π —ç—Ç–∞–ø —Å–æ—Å—Ç–æ—è–Ω–∏—è
    await GameStates.waiting_for_bet_3.set()





if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)